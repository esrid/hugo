<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on ApprentiGO</title>
    <link>apprendregofacilement.fr/</link>
    <description>Recent content in Home on ApprentiGO</description>
    <generator>Hugo</generator>
    <language>fr-fr</language>
    <lastBuildDate>Sun, 04 Aug 2024 14:45:20 -0400</lastBuildDate>
    <atom:link href="apprendregofacilement.fr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shadow</title>
      <link>apprendregofacilement.fr/posts/shadow/</link>
      <pubDate>Sun, 04 Aug 2024 14:45:20 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/shadow/</guid>
      <description>Block Comme vous le savez vous pouvez déclarer des variables de part e d&amp;rsquo;autres.&#xA;Chaque endroit ou vous pouvez déclarer une variable s&amp;rsquo;appelle en fait un block.&#xA;Les type, const, var et function qui sont déclarer en dehors d&amp;rsquo;une fonction sont dans le package block.&#xA;// un fichier go package main const StatusNotFound = 404 // ici le status not found ce trouve dans le block du `package` donc accesible dans n&amp;#39;importe quel autre fichier avec appertant au package main Toutes les variables qui sont dans une fonction y compris les paramètres d&amp;rsquo;une fonction sont dans le block de cette fonction, c&amp;rsquo;est-à-dire que le champ d&amp;rsquo;application (portée) n&amp;rsquo;est utilisable qu&amp;rsquo;entre les deux accolades de la fonction.</description>
    </item>
    <item>
      <title>Struct</title>
      <link>apprendregofacilement.fr/posts/struct/</link>
      <pubDate>Thu, 25 Jul 2024 15:45:51 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/struct/</guid>
      <description>Struct Pour déclarer un struct vous devez utiliser le mot-clé type suivi d&amp;rsquo;un identifiant ensuite du mot-clé struct et pour finir ouvrer et fermé les accolades {} .&#xA;type Nature struct {} Dans cet exemple ci-dessus, nous avons déclaré un struct Nature sans aucun champ.&#xA;Pour déclarer un champ vous devez spécifier le nom du champ et son type.&#xA;type Nature struct { animalsEspece []string plantsEspece []string } Un struct est un type à part entière donc vous pouvez déclarer des variables de ce type.</description>
    </item>
    <item>
      <title>Maps</title>
      <link>apprendregofacilement.fr/posts/maps/</link>
      <pubDate>Thu, 18 Jul 2024 15:45:51 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/maps/</guid>
      <description>Maps Pour déclarer une map vous devez utiliser le mot-clé map suivi du type de clé et du type de value.&#xA;var x map[string]int Dans cet exemple ci-dessus, nous avons créé une nil map qui attend un string en clé et un int en value.&#xA;func main() { var x map[string]int fmt.Printf(&amp;#34;%T, %v&amp;#34;, x,x ) } Lorsque vous déclarez une nil map en go vous pouvez uniquement la lire , ce qui vous renvoie toujours la valeur zéro du type de valeur de la carte, mais vous ne pouvez rien ajouter, car la map n&amp;rsquo;est pas initialiser.</description>
    </item>
    <item>
      <title>Tranche &amp; tableau quel sont les différences ? </title>
      <link>apprendregofacilement.fr/posts/slice/</link>
      <pubDate>Thu, 04 Jul 2024 15:45:51 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/slice/</guid>
      <description>Array Pour déclarer un tableau, vous devez spécifié la taille et le type :&#xA;var a [5]int Cette déclaration initialise les valeurs du tableau au type par défaut, qui est 0 pour les entiers (int). Cela signifie que dans cet exemple, la variable a contient un tableau avec 5 chiffres 0, [0,0,0,0,0].&#xA;var a = [...]int{1,2,3,4,5} Vous pouvez également utiliser cette notation, qui déterminera automatiquement le nombre d’éléments dans le tableau.</description>
    </item>
    <item>
      <title>Go variables &amp; constant</title>
      <link>apprendregofacilement.fr/posts/variables/</link>
      <pubDate>Mon, 01 Jul 2024 08:58:17 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/variables/</guid>
      <description>Dans le langage Go, il existe plusieurs méthodes pour déclarer des variables, chacune ayant ses spécificités. Dans cet article, nous allons explorer ces différentes méthodes et déterminer dans quels contextes l&amp;rsquo;une peut être préférable à une autre.&#xA;Var var dix int = 10 Le mot clé var suivit de l&amp;rsquo;identifiant dix, le type et l&amp;rsquo;assignement.&#xA;var dix = 10 Vous pouvez omettre le type si le type par défaut correspond à celui que vous souhaitez.</description>
    </item>
  </channel>
</rss>
