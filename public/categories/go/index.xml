<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on ApprentiGO</title>
    <link>apprendregofacilement.fr/categories/go/</link>
    <description>Recent content in Go on ApprentiGO</description>
    <generator>Hugo</generator>
    <language>fr-fr</language>
    <lastBuildDate>Thu, 18 Jul 2024 15:45:51 -0400</lastBuildDate>
    <atom:link href="apprendregofacilement.fr/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maps</title>
      <link>apprendregofacilement.fr/posts/maps/</link>
      <pubDate>Thu, 18 Jul 2024 15:45:51 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/maps/</guid>
      <description>Maps Pour déclarer une map vous devez utiliser le mot-clé map suivi du type de clé et du type de value.&#xA;var x map[string]int Dans cet exemple ci-dessus, nous avons créé une nil map qui attend un string en clé et un int en value.&#xA;func main() { var x map[string]int fmt.Printf(&amp;#34;%T, %v&amp;#34;, x,x ) } Lorsque vous déclarez une nil map en go vous pouvez uniquement la lire , ce qui vous renvoie toujours la valeur zéro du type de valeur de la carte, mais vous ne pouvez rien ajouter, car la map n&amp;rsquo;est pas initialiser.</description>
    </item>
    <item>
      <title>Tranche &amp; tableau quel sont les différences ? </title>
      <link>apprendregofacilement.fr/posts/slice/</link>
      <pubDate>Thu, 04 Jul 2024 15:45:51 -0400</pubDate>
      <guid>apprendregofacilement.fr/posts/slice/</guid>
      <description>Array Pour déclarer un tableau, vous devez spécifié la taille et le type :&#xA;var a [5]int Cette déclaration initialise les valeurs du tableau au type par défaut, qui est 0 pour les entiers (int). Cela signifie que dans cet exemple, la variable a contient un tableau avec 5 chiffres 0, [0,0,0,0,0].&#xA;var a = [...]int{1,2,3,4,5} Vous pouvez également utiliser cette notation, qui déterminera automatiquement le nombre d’éléments dans le tableau.</description>
    </item>
  </channel>
</rss>
